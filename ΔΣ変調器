import numpy as np
import matplotlib.pyplot as plt
from scipy.fft import fft, fftfreq

# Parameters for input sine wave
amplitude = 1
frequency = 17 * 2 * np.pi  # Frequency in radians
sample_rate = 2 ** 14  # Sample rate as per the given sample time 1/(2^14)
T = 1 / sample_rate  # Sampling period
t = np.arange(0, 1, T)  # Time array for 1 second

# Generate input sine wave
sine_wave = amplitude * np.sin(frequency * t)

# ΔΣ Modulator Simulation
def delta_sigma_modulator(input_signal):
    output_signal = np.zeros(len(input_signal))
    integrator = 0

    for i in range(1, len(input_signal)):
        integrator += input_signal[i] - output_signal[i-1]
        output_signal[i] = 1 if integrator >= 0 else -1  # Sign function

    return output_signal

# Apply the ΔΣ modulator to the input sine wave
modulated_signal = delta_sigma_modulator(sine_wave)

# Calculate Power Spectrum
def power_spectrum(signal, sample_rate):
    N = len(signal)
    yf = fft(signal)
    xf = fftfreq(N, 1 / sample_rate)
    power_spectrum = 20 * np.log10(np.abs(yf[:N // 2]) / N)  # Calculate in dB
    return xf[:N // 2], power_spectrum

# Get the power spectrum of the modulated signal
frequencies, power = power_spectrum(modulated_signal, sample_rate)

# Plot the input and modulated signals
plt.figure(figsize=(12, 6))
plt.subplot(2, 1, 1)
plt.plot(t[:1000], sine_wave[:1000], label="Input Sine Wave")
plt.plot(t[:1000], modulated_signal[:1000], label="ΔΣ Modulated Output", linestyle="--")
plt.title("Input Sine Wave and ΔΣ Modulated Signal")
plt.xlabel("Time [s]")
plt.ylabel("Amplitude")
plt.legend()

# Plot the power spectrum of the modulated signal
plt.subplot(2, 1, 2)
plt.plot(frequencies, power)
plt.title("Power Spectrum of ΔΣ Modulated Signal")
plt.xlabel("Frequency [Hz]")
plt.ylabel("Power [dB]")
plt.xlim(0, sample_rate / 2)
plt.grid()

plt.tight_layout()
plt.show()
