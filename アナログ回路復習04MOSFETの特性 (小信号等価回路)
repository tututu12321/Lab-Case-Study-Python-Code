import numpy as np
import matplotlib.pyplot as plt

# Given parameters
V_T = 1.0            # Threshold voltage (V)
mu_n = 200e-4        # Carrier mobility (m^2/VÂ·s)
C_ox = 3.45e-3       # Oxide capacitance per unit area (F/m^2)
W = 10e-6            # Channel width (m)
L = 2e-6             # Channel length (m)
lambda_param = 0.02  # Channel length modulation parameter

# Calculate process parameter K
K = (mu_n * C_ox / 2) * (W / L)

# Voltage range for V_GS and V_DS
V_GS_values = np.linspace(0, 5, 5)  # Different Gate-Source voltages from 0V to 5V
V_DS = np.linspace(0, 5, 500)       # Drain-Source voltage from 0V to 5V

# Function to calculate I_D for a given V_GS and V_DS
def calculate_I_D(V_GS, V_DS):
    if V_GS <= V_T:
        return 0  # MOSFET is off when V_GS <= V_T
    elif V_DS <= V_GS - V_T:
        # Linear (Ohmic) region
        return K * ((V_GS - V_T) * V_DS - 0.5 * V_DS ** 2) * (1 + lambda_param * V_DS)
    else:
        # Saturation region
        return K * ((V_GS - V_T) ** 2) * (1 + lambda_param * V_DS)

# Calculate and plot I_D vs V_DS for different V_GS values
plt.figure(figsize=(10, 6))
for V_GS in V_GS_values:
    I_D = [calculate_I_D(V_GS, v_ds) for v_ds in V_DS]
    plt.plot(V_DS, I_D, label=f'V_GS = {V_GS:.1f} V')

# Plot configuration
plt.title('MOSFET Drain Current $I_D$ vs $V_{DS}$ for different $V_{GS}$')
plt.xlabel('$V_{DS}$ (V)')
plt.ylabel('$I_D$ (A)')
plt.legend()
plt.grid(True)
plt.show()
